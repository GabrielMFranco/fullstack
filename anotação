         Ferramentas de Pesquisas
-npm    -devdocs
------------------------------------------------------------------
                        GIT HUB
 Comandos para trabalhar com repositório local
- git init => inicio o git no seu projeto
- git status => verifica alterações de pastas e arquivos no projeto
- git add . => adiciona todos os arquivos e pastas modificadas
- git commit -m "mensagem aqui" => cria e escreve um commit
- git log => historico de commit do projeto
- git push=> envia alterações locais para locais remotos
- git pull => faz as alterações de um repositorio remoto para o seu local
- git clote => cloca o repositorio remoto para o pc local

------------------------------------------------------------------
                        HTML
 Comentários:
    <-- comentário... -->

 Tags:
- Identificado por < >
- Podem ser identificadas por atriburos de 'id' ou 'class'

- <br> => quebra de linha              - &nbsp; => espaço
- <p> => Paragrafo e quebra de linha   - <a href=" "> => link
- <em> => enfase na palafra entre tag  - <strong> => Negrito
- <mark> => efeito marca texto         - <s> => efeito riscado


            Caracteres Reservados
- &lt; &gt; => < >                     -<code> => Altera fonte para cod
<pre> => permite que tenha espaço, usado em conjunto do 'code'

            Atribitos HTML
 Informações extras / configurações
            Atributos Booleano
 Não precisa de conteúdo => hidden 
            Atributos Globlais
 Podem ser usados em todos os elementos HTML
 -id=" " => identificado no css pelo #   - class=" " => itenficado pelo .
 - data-..=" " => adiciona dados personalizados
 - style = " " => Altera o css diretamente pelo HTML,
            
            Tags Sêmanticas
   Usado para deixar o código semantico e favorecer o site:
- <header> => cabeçalho                 -<main> => Conteúdo principal
- <aside> => conteudo segundario        -<footer> => rodapé
- <nav> => navegação, contem links.     -<Section> => Definem seções.
- <article> => Definem um artigo
            Tags genéricas
-<div>                                  -<spam>

            Listas
- <ul> => Lista não ordenada          -<ol> => Lista ordenada
- <li> => item da lista               -<dl> =>
- <dt> => 

            Caminhos absolutos e relativos
 Absoluro => Um caminho que é especificado a partir da raiz do sistema de arquivos
 Relativo => Um caminho que pe especificado a partir do diretório atual

------------------------------------------------------------------
                        CSS
 Cascading Stylesheet / folha de estilo em cascata

 Comentarios:
   /* comentario */

            Box Model
 Display:
-Block => ocupa a linha toda           -inline => um ao lado do outro
-flex => flexbox                       -grid
            Position
- relative => relativo a si mesmo
- absolute => relativo ao containing block proximo ou inicial
- fixed => fica fixo na tela, se dar scroll ele acompanha no munitor no -          mesmo ponto fixo 
- sticky => acompanha o scroll sem sair da tela, relativo ao elemeto pai -           que tenha mec de scroll

            Pseudo Classes :
- :hover => Quando passar o mouse em cima acontece uma interação
         ex: div:hover{ background-color: green;  }
- :not => colocar uma função em um elemento que não tem o requisito.
       ex: div:not(.nao){background-color:blue;} adiciona o background nos
           elementos que não tem a classe.nao
- :has => o elemento que tenha o requisito recebe...
       ex: section:has(div:hover){ Se tiver hover em alguma div, vai recer
           o que foi fornecido}
- :root => 
- :nth-child(n) => pega o elemento 'n' fornecido e aplica o que foi dado

            Pseudo Elements ::
- ::first-elements => pega todas as primeiras letras do conteúdo
- ::before / later => Cria elementos antes ou depois do conteudo

            Flexbox
-Main => eixo principal               -Cross => eixo cruzado/oposto

 flex-direction:
- row => um ao lado do outro        - collumn => em coluna   
- reverse => inverte o lado =>row-reverse =>collum-reverse

            Alinhamento e espaçamento
- justify-content => alinhamento dentro do container  
      flex-start => gruda no main-start
      flex-end => gruda no main-end
      center => centraliza no main
      space-evenly => espaços constantes
      space-around => espaço ao redor
      space-between => espaço entre elementos
- align-content => apenas com flex wap abilitado
- align-self => apenas o elemento
- align-items => alinhamento no eixo cruzado
      stretch => estica no tamanho do container
      flex-start => gruda no cross-start
      flex-end => gruda no cross-end
      center => centraliza no cross
      baseline => alinha na linha base do texto
- gap => espaço entre elementos
- margin => alinha com base na margin

            Multi linha
 flex-wrap:
- wrap => quebra o elemento se não tiver espaço na div
-nowrap =>

            sizing
- flex-basic => tamanho do item relativo ao eixo principal
- flex-grow => crescimento automatico do item conforme espaço vazio
- flex-shrink => encolhimento automatico do item 
Shorthand => flex: grow shring basic;

            GRID
 Colunas e linhas que posicionam o conteudo do site como você preferir
 Cria linhas conforme a quantia de elemtentos dentro dele
- Display: inline-grid: => aceita algumas propriedades que o inline não 
          aceitaria
  Grid template:
- columns; => altera o tamanho das colunas, podendo ser dividida em px ou 
          em fr, que divide em espaços iguais, podemos usar também o repeat( ) ex: repeat(3, 1fr), ele faz 3 elementos dividido em uma frasão, ficando dividido igualmente na tela, se tiver um quarto elemento ele é jogado pra outra linha 
- rows; =>altera o tamanho das linhas, 
-areas; => da uma itentificação para as areas e onde ela ocupa, podendo 
           repetir se ela for abranger mais de uma coluna ou linha. EX:
           "a b b" 
           "a b b" // podemos add tamanho por px aqui ex: 50px
           "a c d" 40px / 80px 1fr 2fr;

           Assim é só colocar a identificação nos itens que ele ocupa o espaço, podemos colocar como as tags também.

 Itens
-grid-collums: => tem como base as linhas virtuais
 start => qual coluna ele começa 
 end => qual coluna ele termina
-grid-row://
 Podemos dar espaço entre os elementos com o 'gap', 'row-gap', 'collumn-gap'

 Alinhamento no grind
- Aplicadas no container:
 aligh-content => alinha no rixo y, com center, space-bettween ...
 justify-content => alinha no eixo x
 place-content => junção do alight e justify

 aligh-items => alinha os itens eixo y , start,end, ...
 justify-items => alinha os itens no eixo x,
 place-items => trabalha com os 2, aligh e justify

- Aplicadas no itens?
 align-self => aplica as mesmas coisas, porem em um unico item.
 justify-self => 
 place-selt => 

 Propriedades auto do grid
- grid-auto-flow => fluxo altomatico para column ou row q é o padrao
- grid-auto-columns => max-content,...

-----------------------------------------------------------------------
                                    FORMS
 <form action= "pra onde vai os dados" method="post ou get"> </form>

 <button> => type ="submit => envia dados
                   "reset" => limpar dados
                   "button" => inicia uma ação
- autofocus => faz com que o botão fique selecionado para facilitar
- disabled => desativa o botão 
- name => nome do botao
  value=> valor ao ser utilizado ao enviar o formulario

<input type="text" name="nome"> =>
- Atributos fundamentais:
  name => o valor do imput ao enviar o formulario
  type => define tipo de dado
- Atributos gerais:
  value =>
  autocomplete=>
  size=> cresce e diminui o tamanho do imput
  autofocus=> quando abrir o form esse campo vai ficar focado
  disabled=> desabilitar qual campo quiser
  readonly=> não deixa autorar o que ta escrito
  form=> 
  required=> tem que preencer o campo para deixar enviar
  placeholder=> texto dentro do texto com dica dq colocar ali

<input type="number"> => aceita apenas números
                         min/max=>numero minimo e maximo 
                         step=> pular numero,ex: de 10 em 10
<input type="email"> => valida um email
                        multiple => aceita mais de um email, separado por ,
                        minlength/maxlength=> numero de letras
                        pattern => verifica as informações ex:
                              pattern=".+@
                        title => avisa oq precisa pra validar ex:
                              title="apenas @gmail.com"
<input type="password"> => oculta o texto com *
                           minlength/maxlength =>
                           pattern => ex: [0-9a-fA-F]{4,8} 
                           inputmode=> numeric => abre teclado do cel
                           title=> 
<input type="file"> => envia um ou mais arq pelo form, o form precida do
                       atributo enctype="multipart/form-data".
                       multiple => usa mais de um arquivo
                       accept => tipo de arquivo que vai ser aceito.ex:
                        accpt="video/*" aceita todo tipo de video
                        accpet="audio/mp3" apenas audio, mp3
<input type="range"> => cria um barra igual de volume
                        min/max => define o min e max dos numeros
                        step => quantidade de número que pula
                        value => o valor que a barra inicia
<input type="color"> => interface que seleciona cor
                        value => define a cor inicial (RGB)
                        datalist => define uma pre definição de cor:
                        <option value="cor">, colca um id no datalist e menciona ele no list="id"  
<input type="checkbox"> => seleção de valores
                           value => como o valor selecionada vai ser enviado ex: value="carro" ai no checkbox adicona o nome do carro
                           pode ter varios valores
                           cheched=> começa com algo marcado
<input type="radio"> => marca apenas um no grupo de opções.
<input type="hidden"> => sempre trafega informações mas sempre escondidas
                         value="id" => não aparece pra quem meche no form
 Sempre usar o caniuse.com para pesquisar os inputs e se atualizar.

<label for="id do imput"> => podemos colocar o input dentro do label pra
                             não precisar usar o for
<textarea name="" id="" cols="" rows=""> => mais de uma linha de texto
                                        minlength/maxlength=>
<select name="" muitile size="2">
    <option value="">Selecione</option>
    <option label="fiat" value="fiat">
    <option label="audi" value="audi">
    size=> quantos aparece na tela e acrescenta rolagem se necessario
    <optgroud> => separa outro grupo dentro dos option

<fielset> => agrupamento de campos
---------------------------------------------------------------------------
OBS Desafio:

fazendo botoes com radio e label:
  - ocultar o input com o 'all: unset' e colocar position absolute, para sobrepor
    o campo que ele está, e adicionar position relative no campo "pai" para 
    mostrar qual campo ele vai se basear, em seguida adicionar o 'inset:0',
    no label basta centralizar e configurar do jeito que precisar.
  - para alterar a cor usar o '&:hover, &:focus' e para mudar quando selecionar
    usar o '&:has(:checked)'


--------------------------------------------------------------------------

          CSS Function
